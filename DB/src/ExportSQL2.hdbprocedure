PROCEDURE "DA.PUBLISH::ExportSQL2" ( IN SQLID Integer )
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   AS
BEGIN
    declare SQLQUERY varchar(8000);
    declare sqlstr nvarchar(8000);
	-- declare outcolsquery nvarchar(8000);
	-- declare view_name varchar(250);
	-- declare filter varchar(500);
	-- declare outcol varchar(500);
	-- declare schema_name varchar(500);
	declare table_name varchar(100);
	declare table_name1 varchar(100);
	 declare tfolder varchar(255);
	 declare sfolder varchar(255);
	 declare tfile varchar(255);
--	 declare access varchar(1000);

DECLARE EXIT HANDLER FOR SQLEXCEPTION 
BEGIN
-- Set status as E(Error) 
-- ov_error_code := ::sql_error_code;				-- SQL Error Code

insert into "DA.PUBLISH::DataModel.EXTRACT_ERROR" values(:sqlid,0,0,current_timestamp,::sql_error_code, ::Sql_error_message);


END;   
   /*************************************
       Write your procedure logic 
   *************************************/


select 'DA_' || sqlid || '_' || 0 || '_ITEM' into table_name from  "DA.PUBLISH::Dummy";
select 'DA_' || sqlid || '_' || 0 || '_HEAD' into table_name1 from  "DA.PUBLISH::Dummy";

select max(a.tfolder) into tfolder
	from
	"DA.PUBLISH::DataModel.EXTRACT_SQL" as a
	where a.id = :sqlid;

select max(a.tfile) into tfile
	from
	"DA.PUBLISH::DataModel.EXTRACT_SQL" as a
	where a.id = :sqlid;
		  
select max(a.sfolder) into sfolder
	from
	"DA.PUBLISH::DataModel.EXTRACT_CONFIG" as a;
select :sfolder || '\' || 'DA_' || sqlid || '_' || 0 into sfolder from  "DA.PUBLISH::Dummy";		  

select
concat(concat(concat('create table ',table_name),
concat('( ' ,
String_Agg(columnStr, ', ' order by position))),');')
into sqlquery
from ( select
  min(position) as position,
  '"' || a.head_text || 
  '" ' || ' NVARCHAR(256) '
 as columnStr
 from "DA.PUBLISH::DataModel.EXTRACT_SQL_HEAD" as a
 where id = :sqlid
 group by a.head_text
 order by position
 
);

 EXECUTE IMMEDIATE (:SQLQUERY);
 
select
concat(concat(concat('create table ',table_name1),
concat('( ' ,
String_Agg(columnStr, ', ' order by position))),');')
into sqlquery
from ( select
  min(position) as position,
  '"' || a.head_text || 
  '" ' || ' NVARCHAR(100) '
 as columnStr
 from "DA.PUBLISH::DataModel.EXTRACT_SQL_HEAD" as a
 where id = :sqlid
 group by a.head_text
 order by position
 
);

EXECUTE IMMEDIATE (:SQLQUERY);
 
select
concat(concat(concat('INSERT INTO ',table_name1),
concat(' values( ' ,
String_Agg(concat('''',columnStr),''', ' order by position))),''');')
into sqlquery
from ( select
  min(position) as position,
  head_text as columnStr
 from "DA.PUBLISH::DataModel.EXTRACT_SQL_HEAD" as a
 where id = :sqlid
group by a.head_text
 order by position
);

 EXECUTE IMMEDIATE :SQLQUERY;


 --select :sqlquery into sqlqr from  "DA.PUBLISH::Dummy";
select max(b.s_code) into sqlstr 
from  "DA.PUBLISH::DataModel.EXTRACT_SQL" as b
where b.id = :sqlid;

select 'INSERT INTO ' || table_name || ' ' || sqlstr ||';' 
into "SQLQUERY" from  "DA.PUBLISH::Dummy";

 EXECUTE IMMEDIATE :SQLQUERY;

select 'EXPORT  ' || table_name || ' AS CSV INTO ''/ch00sa19/DA'' WITH REPLACE THREADS 10;'
into "SQLQUERY" from "DA.PUBLISH::Dummy";
 EXECUTE IMMEDIATE :SQLQUERY; 


select 'EXPORT  ' || table_name1 || ' AS CSV INTO ''/ch00sa19/DA'' WITH REPLACE THREADS 10;'
into "SQLQUERY" from "DA.PUBLISH::Dummy";
 EXECUTE IMMEDIATE :SQLQUERY; 
 
select 'SELECT * FROM ' || table_name into "SQLQUERY" from "DA.PUBLISH::Dummy";
 EXECUTE IMMEDIATE :SQLQUERY; 
 
delete from "DA.PUBLISH::DataModel.EXTRACT_DOWNLOAD"
 where id = :sqlid and item = 0; 
commit;

 insert into "DA.PUBLISH::DataModel.EXTRACT_DOWNLOAD" values(:sqlid,0,0,current_timestamp,:sfolder,:tfolder,'DATA',:tfile,TO_VARCHAR(current_date, 'MM/DD/YYYY'),'');

select 'EXPORT  "DA.PUBLISH::DataModel.EXTRACT_DOWNLOAD"' || ' AS CSV INTO ''/ch00sa19/DA'' WITH REPLACE THREADS 10;'
into "SQLQUERY" from "DA.PUBLISH::Dummy";

EXECUTE IMMEDIATE :SQLQUERY; 
commit;

select 'DROP TABLE ' || table_name1 into "SQLQUERY" from "DA.PUBLISH::Dummy";
 EXECUTE IMMEDIATE :SQLQUERY;    

select 'DROP TABLE ' || table_name into "SQLQUERY" from "DA.PUBLISH::Dummy";
 EXECUTE IMMEDIATE :SQLQUERY; 
 
END