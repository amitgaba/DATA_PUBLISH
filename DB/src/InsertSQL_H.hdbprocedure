PROCEDURE "DA.PUBLISH::InsertSQL_H" (IN sqlcode  NVARCHAR(1000),
			IN cron NVARCHAR(50), IN tfolder NVARCHAR(255), 
			IN tfile NVARCHAR(100), IN functional NVARCHAR(50),
			IN schid NVARCHAR(10), outcol NVARCHAR(500)
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
    AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
   declare sqlid integer;
   declare lv_pos integer;

   select "DA.PUBLISH::EXTRACT_SQL".nextval into sqlid from "DA.PUBLISH::Dummy";

   insert into "DA.PUBLISH::DataModel.EXTRACT_SQL" 
   values(:sqlid,:sqlcode,:tfolder,:tfile,:cron,:functional,:schid,current_user,current_date,current_user,current_date,outcol);

   lt_outcols = select * from "DA.PUBLISH::SPLIT_STRING_WITH_POS"(:outcol);   
   
   select max(pos) into lv_pos from :lt_outcols;
   if :lv_pos is not null then
   insert into "DA.PUBLISH::DataModel.EXTRACT_SQL_HEAD" 
   select :sqlid as id, pos as position, matnr as HEAD_TEXT,
		  current_user as CRTBY,current_date as CRDAT,current_user as CHGBY,current_date as CHDAT,'' as isnumber
		  from :lt_outcols;
   end if;
END