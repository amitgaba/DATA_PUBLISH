PROCEDURE "DA.PUBLISH::InsertException"  (IN viewname  NVARCHAR(255), IN schemaname  NVARCHAR(255),	
										  IN functional NVARCHAR(50), IN keycol NVARCHAR(500) )
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
    AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
   declare viewid integer;
   declare itemid integer;
   
   select max(id) into viewid from "DA.PUBLISH::DataModel.EXCEPTION_H" where view_name = :viewname;
   if :viewid is null then
   select "DA.PUBLISH::Exception".nextval into viewid from "DA.PUBLISH::Dummy";

   insert into "DA.PUBLISH::DataModel.EXCEPTION_H" 
   values(:viewid,:viewname,:schemaname,current_user,current_date,current_date,current_user,functional);
   
   insert into "DA.PUBLISH::DataModel.EXCEPTION_ITEM" 
	values(:viewid,1,keycol,current_user,current_date,current_date,current_user); 
	
   else 
   select max(item) + 1 into itemid from 	
	"DA.PUBLISH::DataModel.EXCEPTION_ITEM" 
	where id = :viewid;
   
    insert into "DA.PUBLISH::DataModel.EXCEPTION_ITEM" 
		values(:viewid,itemid,keycol,current_user,current_date,current_date,current_user); 
   end if;
   
END